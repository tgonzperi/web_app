{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","inputs","setInputs","handleChange","event","name","target","value","values","action","for","id","type","BaseURI","onChange","APPKey","AuthToken","PKey","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qMA0DeA,MAvDf,WACE,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KAEMC,EAAe,SAACC,GACpB,IAAMC,EAAOD,EAAME,OAAOD,KACpBE,EAAQH,EAAME,OAAOC,MAC3BL,GAAU,SAAAM,GAAM,kCAASA,GAAT,kBAAkBH,EAAOE,QAQ3C,OAEE,cADA,CACA,QAAME,OAAO,QAAb,UACE,uBAAOC,IAAI,UAAX,8BAA6C,uBAC7C,uBACEC,GAAG,UACHC,KAAK,OACLP,KAAK,UACLE,MAAON,EAAOY,SAAW,GACzBC,SAAUX,IACV,uBACF,uBAAOO,IAAI,SAAX,4BAA0C,uBACxC,uBACEC,GAAG,SACHC,KAAK,OACLP,KAAK,SACLE,MAAON,EAAOc,QAAU,GACxBD,SAAUX,IACV,uBACJ,uBAAOO,IAAI,YAAX,+BAAgD,uBAC9C,uBACEC,GAAG,YACHC,KAAK,OACLP,KAAK,YACLE,MAAON,EAAOe,WAAa,GAC3BF,SAAUX,IACV,uBACJ,uBAAOO,IAAI,OAAX,0BAAsC,uBACpC,uBACEC,GAAG,OACHC,KAAK,OACLP,KAAK,OACLE,MAAON,EAAOgB,MAAQ,GACtBH,SAAUX,IACV,uBACF,uBAAOS,KAAK,eCxCLM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.fff75ade.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nfunction App() {\n  const [inputs, setInputs] = useState({});\n\n  const handleChange = (event) => {\n    const name = event.target.name;\n    const value = event.target.value;\n    setInputs(values => ({...values, [name]: value}))\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    alert(inputs);\n  }\n\n  return (\n    // <form onSubmit={handleSubmit} action=\"/form\">\n    <form action=\"/form\">\n      <label for=\"BaseURI\"> Enter BaseURI: </label><br/>\n      <input \n        id=\"BaseURI\"\n        type=\"text\" \n        name=\"BaseURI\" \n        value={inputs.BaseURI || \"\"} \n        onChange={handleChange}\n      /><br/>\n      <label for=\"APPKey\">Enter APPKey: </label><br/>\n        <input \n          id=\"APPKey\"\n          type=\"text\" \n          name=\"APPKey\" \n          value={inputs.APPKey || \"\"} \n          onChange={handleChange}\n        /><br/>\n      <label for=\"AuthToken\">Enter AuthToken: </label><br/>\n        <input \n          id=\"AuthToken\"\n          type=\"text\" \n          name=\"AuthToken\" \n          value={inputs.AuthToken || \"\"} \n          onChange={handleChange}\n        /><br/>\n      <label for=\"PKey\">Enter PKey: </label><br/>\n        <input \n          id=\"PKey\"\n          type=\"text\" \n          name=\"PKey\" \n          value={inputs.PKey || \"\"} \n          onChange={handleChange}\n        /><br/>\n        <input type=\"submit\" />\n    </form>\n  )\n}\n\n\nexport default App; \n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n"],"sourceRoot":""}